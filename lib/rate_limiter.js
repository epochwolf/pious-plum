// Generated by CoffeeScript 1.6.3
(function() {
  var RateLimiter,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  RateLimiter = (function() {
    function RateLimiter(expiry) {
      this.expiry = expiry != null ? expiry : 10 * 60;
      this.clearExpiredKeys = __bind(this.clearExpiredKeys, this);
      this.okay = __bind(this.okay, this);
      this.data = {};
    }

    RateLimiter.prototype.okay = function(key) {
      var check, check_time;
      check_time = Math.round(new Date().getTime() / 1000);
      this.clearExpiredKeys(check_time);
      check = this.data[key];
      if (this.data[key]) {
        return false;
      } else {
        this.data[key] = check_time + this.expiry;
        return true;
      }
    };

    RateLimiter.prototype.clearExpiredKeys = function(check_time) {
      var key, time, _ref, _results;
      _ref = this.data;
      _results = [];
      for (key in _ref) {
        time = _ref[key];
        if (time < check_time) {
          _results.push(delete this.data[key]);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return RateLimiter;

  })();

  module.exports = RateLimiter;

}).call(this);
