// Generated by CoffeeScript 1.6.3
(function() {
  var Plugin,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Plugin = (function() {
    function Plugin(bot, config) {
      this.bot = bot;
      this.config = config;
      this.missingCommand = __bind(this.missingCommand, this);
      this.remove = __bind(this.remove, this);
      this.add = __bind(this.add, this);
      this.showTip = __bind(this.showTip, this);
      this.setup = __bind(this.setup, this);
      this.__name = "tips";
      this.__author = "epochwolf";
      this.__version = "v0.0.1";
      this.__listeners = {};
      this.__commands = {
        add: this.add,
        remove: this.remove,
        show: this.showTip
      };
      this.__missingCommandHandler = this.missingCommand;
      this.__autoload = true;
    }

    Plugin.prototype.setup = function() {
      return this.tips = new (require('../kvstore'))("data/tips.json");
    };

    Plugin.prototype.showTip = function(channel, who, args) {
      var command, msg;
      command = args[0];
      if (msg = this.tips.get(command)) {
        return this.bot.say(channel, "Tip: " + msg);
      } else {
        return this.bot.say(channel, "No tip by that name.");
      }
    };

    Plugin.prototype.add = function(channel, who, args) {
      var tip;
      if (tip = args.shift()) {
        this.tips.set(tip, args.join(" "));
        return this.bot.say(channel, "Tip added.");
      }
    };

    Plugin.prototype.remove = function(channel, who, args) {
      var tip;
      if (tip = args.shift()) {
        this.tips.set(tip, null);
        return this.bot.say(channel, "Tip removed.");
      }
    };

    Plugin.prototype.missingCommand = function(channel, who, command, args) {
      var arg, index, msg, _i, _len;
      if (msg = this.tips.get(command)) {
        msg = msg.replace("{nick}", who).replace("{channel}", channel).replace("{args}", args.join(" "));
        for (index = _i = 0, _len = args.length; _i < _len; index = ++_i) {
          arg = args[index];
          msg = msg.replace("{arg" + (index + 1) + "}", arg);
        }
        if (msg.match(/^\/me /)) {
          msg = msg.replace(/^\/me /, "");
          return this.bot.action(channel, msg);
        } else {
          return this.bot.say(channel, msg);
        }
      }
    };

    return Plugin;

  })();

  module.exports = Plugin;

}).call(this);
