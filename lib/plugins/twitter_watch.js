// Generated by CoffeeScript 1.6.2
(function() {
  var Plugin, TwitterApi, dateFormat, tweet_url,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  TwitterApi = require("ntwitter");

  dateFormat = require('dateformat');

  tweet_url = /\/?([^\/]+)\/status\/([^\/?]+)/;

  Plugin = (function() {
    function Plugin(bot, config) {
      this.bot = bot;
      this.config = config;
      this.tweetDetails = __bind(this.tweetDetails, this);
      this.teardown = __bind(this.teardown, this);
      this.setup = __bind(this.setup, this);
      this.__name = "twitter_watch";
      this.__author = "epochwolf";
      this.__version = "v0.0.1";
      this.__listeners = {
        "message_with_url:twitter.com": [this.tweetDetails]
      };
      this.__commands = {};
      this.__autoload = true;
    }

    Plugin.prototype.conn = function() {
      return new TwitterApi(this.config.twitter_auth);
    };

    Plugin.prototype.setup = function() {
      return console.log("twitter_watch plugin loaded");
    };

    Plugin.prototype.teardown = function() {
      return console.log("twitter_watch plugin unloaded");
    };

    Plugin.prototype.tweetDetails = function(channel, who, message, url) {
      var match, path, tweet_id, user, _,
        _this = this;

      path = url.path;
      console.log("Tweet link: " + path);
      if (match = path.match(tweet_url)) {
        _ = match[0], user = match[1], tweet_id = match[2];
        return this.conn().getStatus(tweet_id, function(err, data) {
          var created_at, date, favorite_count, retweet_count, text;

          if (err) {
            return console.log(err);
          } else {
            console.log(data);
            text = data.text, user = data.user, favorite_count = data.favorite_count, retweet_count = data.retweet_count, created_at = data.created_at;
            date = new Date(created_at);
            date = dateFormat(date, "h:MM - d mmm yy");
            return _this.bot.say(channel, "Twitter | " + user.name + " (@" + user.screen_name + ") at " + date + ": " + text + " ");
          }
        });
      }
    };

    return Plugin;

  })();

  module.exports = Plugin;

}).call(this);
