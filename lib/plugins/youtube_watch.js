// Generated by CoffeeScript 1.6.3
(function() {
  var Plugin, TwitterApi, dateFormat,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  TwitterApi = require("ntwitter");

  dateFormat = require('dateformat');

  Plugin = (function() {
    function Plugin(bot, config) {
      this.bot = bot;
      this.config = config;
      this.videoDetails = __bind(this.videoDetails, this);
      this.videoDetailsShort = __bind(this.videoDetailsShort, this);
      this.videoDetailsLong = __bind(this.videoDetailsLong, this);
      this.teardown = __bind(this.teardown, this);
      this.setup = __bind(this.setup, this);
      this.__name = "youtube_watch";
      this.__author = "epochwolf";
      this.__version = "v0.0.1";
      this.__listeners = {
        "message_with_url:www.youtube.com": [this.videoDetailsLong],
        "message_with_url:youtube.com": [this.videoDetailsLong],
        "message_with_url:youtu.be": [this.videoDetailsShort]
      };
      this.__commands = {};
      this.__autoload = true;
      this.youtube = require('youtube-feeds');
    }

    Plugin.prototype.conn = function() {
      return this.youtube;
    };

    Plugin.prototype.setup = function() {
      return console.log("youtube_watch plugin loaded");
    };

    Plugin.prototype.teardown = function() {
      return console.log("youtube_watch plugin unloaded");
    };

    Plugin.prototype.videoDetailsLong = function(channel, who, message, url) {
      var match, path, query, video_id, _;
      path = url.path, query = url.query;
      if (path.match(/^\/watch/) && (match = query.match(/v=([A-Za-z0-9_-]+)/))) {
        _ = match[0], video_id = match[1];
        console.log(video_id);
        return this.videoDetails(channel, who, message, video_id);
      }
    };

    Plugin.prototype.videoDetailsShort = function(channel, who, message, url) {
      var match, path, video_id, _;
      path = url.path;
      if (match = path.match(/\/?([A-Za-z0-9_-]+)/)) {
        _ = match[0], video_id = match[1];
        return this.videoDetails(channel, who, message, video_id);
      }
    };

    Plugin.prototype.videoDetails = function(channel, who, message, video_id) {
      var _this = this;
      return this.conn().video(video_id, function(err, data) {
        var duration, hours, minutes, seconds, title, video_length;
        if (err) {
          return console.log(err);
        } else {
          console.log(data);
          title = data.title, duration = data.duration;
          hours = parseInt(duration / 3600) % 24;
          minutes = parseInt(duration / 60) % 60;
          seconds = duration % 60;
          video_length = (hours && minutes < 10 ? "0" + minutes : minutes) + ":" + (seconds < 10 ? "0" + seconds : seconds);
          if (hours) {
            video_length = hours + ":" + video_length;
          }
          return _this.bot.say(channel, "YouTube | " + title + " | " + video_length);
        }
      });
    };

    return Plugin;

  })();

  module.exports = Plugin;

}).call(this);
