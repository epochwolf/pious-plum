// Generated by CoffeeScript 1.6.2
(function() {
  var bot, config, irc, package_info, path, process_command, tips, util;

  process.stdin.resume();

  process.on('SIGINT', function() {
    return bot.disconnect("Ctrl+C from console.", process.exit);
  });

  console.log("Stating bot");

  util = require('util');

  irc = require("irc");

  path = require('path');

  config = require('../config');

  package_info = require('../package');

  tips = new (require('./kvstore'))(path.join(__dirname, "../data/tips.json"));

  bot = new irc.Client(config.server, config.nick, {
    channels: config.channels
  });

  bot.addListener('error', function(message) {
    return console.log("error: " + (util.inspect(message)));
  });

  bot.addListener("join", function(channel, who) {
    if (who === config.nick) {
      return bot.say(channel, "Hi everyone!");
    } else {
      return bot.action(channel, "welcomes " + who);
    }
  });

  bot.addListener("action", function(who, channel, message) {
    if (message === "waves") {
      return bot.action(channel, "waves back");
    }
  });

  bot.addListener("message", function(who, channel, message) {
    var args, command;

    console.log("" + who + " => " + channel + ": " + message);
    if (0 === message.indexOf(config.trigger)) {
      args = message.split(" ");
      command = args.shift().substr(config.trigger.length);
      return process_command(channel, who, command, args);
    }
  });

  process_command = function(channel, who, command, args) {
    var msg, tip;

    switch (command) {
      case "hi":
        return bot.say(channel, "Hello");
      case "join":
        if (who === "epochwolf") {
          if (args[0]) {
            bot.say(channel, "Okay.");
            return bot.join(args[0]);
          } else {
            return bot.action(channel, "yawns");
          }
        } else {
          return bot.say(channel, "Nope.");
        }
        break;
      case "part":
        if (who === "epochwolf") {
          bot.say(channel, "Okay.");
          return bot.part(args[0] || channel);
        } else {
          return bot.say(channel, "Nope.");
        }
        break;
      case "quit":
        return bot.say(channel, "I hope you enjoy my company. I'm not programmed for suicide.");
      case "about":
        return bot.say(channel, "I am a Pious Purple " + package_info.version + " https://github.com/epochwolf/pious-purple");
      case "show":
        if (msg = tips.get(args[0])) {
          return bot.say(channel, "Tip: " + msg);
        } else {
          return bot.say(channel, "No tip.");
        }
        break;
      case "add":
        if (tip = args.shift()) {
          tips.set(tip, args.join(" "));
          return bot.say(channel, "Tip added.");
        }
        break;
      case "remove":
        if (tip = args.shift()) {
          tips.set(tip, null);
          return bot.say(channel, "Tip removed.");
        }
        break;
      default:
        if (msg = tips.get(command)) {
          return bot.say(channel, msg);
        }
    }
  };

}).call(this);
